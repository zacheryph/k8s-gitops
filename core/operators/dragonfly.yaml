---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name dragonfly-operator
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    serviceAccount:
      create: true
      name: *name
    rbac:
      roles:
        dragonfly-operator:
          type: ClusterRole
          rules:
          - apiGroups: ["coordination.k8s.io"]
            resources: ["leases"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
          - apiGroups: [""]
            resources: ["events"]
            verbs: ["create", "patch"]
          - apiGroups: [""]
            resources: ["pods", "services"]
            verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
          - apiGroups: ["apps"]
            resources: ["statefulsets"]
            verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
          - apiGroups: ["dragonflydb.io"]
            resources: ["dragonflies"]
            verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
          - apiGroups: ["dragonflydb.io"]
            resources: ["dragonflies/finalizers"]
            verbs: ["update"]
          - apiGroups: ["dragonflydb.io"]
            resources: ["dragonflies/status"]
            verbs: ["get", "patch", "update"]
      bindings:
        dragonfly-operator:
          type: ClusterRoleBinding
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: dragonfly-operator
          subjects:
            - kind: ServiceAccount
              name: dragonfly-operator
              namespace: operators-system
    controllers:
      dragonfly-operator:
        replicas: 1
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/dragonflydb/operator
              tag: v1.1.8@sha256:5e0ebd5d58066499fb19ea4102531972401f2a6100fc9f4dbc45284c4175de82
            command: [/manager]
            args:
              - --health-probe-bind-address=:8081
              - --metrics-bind-address=:8080
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ALL] }
        pod:
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
          # topologySpreadConstraints:
          #   - maxSkew: 1
          #     topologyKey: kubernetes.io/hostname
          #     whenUnsatisfiable: DoNotSchedule
          #     labelSelector:
          #       matchLabels:
          #         app.kubernetes.io/name: *name
    service:
      app:
        controller: *name
        ports:
          http:
            port: *port
          metrics:
            port: 8080
    # serviceMonitor:
    #   app:
    #     serviceName: *name
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /metrics
    #         interval: 1m
    #         scrapeTimeout: 10s
