---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-config
  namespace: media
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 4Gi
  storageClassName: longhorn
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-labs
        namespace: flux-system

  values:
    controllers:
      app:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.27.2.10142@sha256:aa84b8341e2b53281bcea4696427861e4ab02ab004cd76a1b3a76d77ea065ac5
            env:
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 7878
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__APPLICATION_URL: https://${RADARR_INGRESS_HOST}
              RADARR__LOG_LEVEL: info
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 50m
                memory: 384Mi
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: app
        ports:
          http:
            port: *port

    ingress:
      app:
        className: nginx
        labels:
          cluster.routine.sh/ingress-auth: authelia
        hosts:
          - host: ${RADARR_INGRESS_HOST}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: radarr-config
      media:
        existingClaim: media-pool
      tmp:
        type: emptyDir
